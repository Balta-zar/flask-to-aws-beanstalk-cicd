name: CICD


env:
  EB_PACKAGE_S3_BUCKET_NAME   : "beanstalks-deployment-dev"
  EB_APPLICATION_NAME         : "dev-env"
  EB_ENVIRONMENT_NAME         : "python-flask-test"
  DEPLOY_PACKAGE_NAME         : "flask-app-${{ github.sha }}.zip"
  AWS_REGION                  : "us-east-1"

on:
  push:
    branches:
      - main


jobs:
  ci_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone repository
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy our deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: Print message on completion of CI pipeline
        run: echo "CI Pipeline finished successfully"

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ci_pipeline]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Create new ElasticBeanstalk Application version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="{{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      - name: Deploy new Application version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"

      - name: Print message on completion of CD pipeline
        run: echo "CD Pipeline finished successfully"
